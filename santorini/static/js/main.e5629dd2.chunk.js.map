{"version":3,"sources":["components/square.js","components/panel.js","components/boardHuAi.js","components/game.js","index.js"],"names":["Square","props","glowing","className","onClick","src","alt","width","height","Panel","document","getElementById","click","this","side","class","href","id","defaultValue","value","algorithmFun","increaseFun","decreaseFun","connectButtonInput","onChange","importState","type","hidden","exportState","React","Component","getAvailableMovesURL","gameEnded","Board","state","cells","Array","fill","firstHE","secondHE","firstJU","secondJU","availableMovesOrBuilds","humanNext","humanPlayer","human","chooseMove","moving","building","buildersSetUp","lastClickedId","serverAiMoveURL","whoseMove","upperBoundCellValue","lowerBoundCellValue","movesCount","depth","alert","idOfCell","setUpBuilders","setUpAIBuilders","setState","setupAvailableMoves","find","x","moveFigure","buildBlock","doMoveAI","URL","checkWin","changeMoveUI","getAIMoveFromServer","then","resp","coordinatesMoveFrom","buildersID","data","move","build","url","slice","map","startPosition","axios","post","catch","err","console","log","response","logSetupUI","first","second","firstJULocal","secondJULocal","combinationsFirst","combinationsSecond","i","selectedCoordinate","getMovesFromServer","arrayOfMoves","Math","floor","moves","fromCell","toCell","callBackFunction","multiplier","oldValueOfCell","logMoveUI","canGoDeeper","onCell","index","findIndex","window","confirm","location","reload","length","text","innerHTML","replace","element","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","removeChild","event","reader","FileReader","onload","e","loadMoves","readAsText","target","files","result","trim","split","setUpBuildersFromImport","doMovesFromImport","singleMovesArray","shift","moveFrom","convertCoordinatesImport","moveTo","buildOn","firstRow","numberOfCellFirst","numberOfCellSecond","coordinateString","row","column","parseInt","updateDepthUI","textContent","isBuild","movesDiv","resString","convertCoordinatesExport","whereSetUp","builderNumber","coordinate","resultString","String","getElementsByClassName","sources","square","getImageSourceCell","renderSquare","changeUrl","incDepth","decDepth","loadState","downloadState","source","clickHandle","Game","ReactDOM","render"],"mappings":"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","file":"static/js/main.e5629dd2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Square(props) {\r\n    return props.glowing === true ?\r\n        (\r\n            <button className=\"square glowing\" onClick={props.onClick}>\r\n                <img src={props.src} alt=\"Polje\" width=\"100%\" height=\"100%\"></img>\r\n            </button>\r\n        ):\r\n        (\r\n            <button className=\"square\" onClick={props.onClick}>\r\n                <img src={props.src} alt=\"Polje\" width=\"100%\" height=\"100%\"></img>\r\n            </button>\r\n        )\r\n}\r\n\r\nexport default Square;\r\n","import React from 'react';\n\nclass Panel extends React.Component {\n    connectButtonInput() {\n        const inputFile = document.getElementById(\"upload-file\");\n        inputFile.click();\n    }\n\n    render() {\n        if (this.props.side === \"left\")\n            return (\n                <div className={this.props.class}>\n                    <a href=\"http://127.0.0.1:8000/home\">\n                        <img id=\"back-img\" width=\"100em\" height=\"100em\" src=\"../images/back-button.png\" alt=\"back-button\"></img>\n                    </a>\n                    <div className=\"text-div\">\n                        <ol>\n                            <em><h3>Instructions</h3></em>\n                            <li><b>Click</b> on the two of available fields to set builder</li>\n                            <li><b>Click</b> on one builder to select, move and build with him on one of the highlighted fields</li>\n                            <li><em><b>Goal</b> is to get to the third floor, good luck!</em></li>\n                        </ol>\n                    </div>\n                </div>\n            );\n        else\n            return (\n                <div className={this.props.class}>\n                    <div className=\"algorithm-box\">\n                        <fieldset>\n                            <legend>\n                                <em>Algorithm</em>\n                            </legend>\n                            <select id=\"algorithm\" defaultValue=\"ab-enhanced\">\n                                <option value=\"minimax\">Minimax</option>\n                                <option value=\"ab\">α - β</option>\n                                <option value=\"ab-enhanced\">α - β enhanced</option>\n                            </select>\n                            <button className=\"algorithm-button\" onClick={this.props.algorithmFun}>\n                                Choose algorithm\n                            </button>\n                        </fieldset>\n                        <fieldset>\n                            <legend>\n                                <em>Depth</em> <b><span id=\"graph-depth\">4</span></b>\n                            </legend>\n                            <button className=\"algorithm-button\" onClick={this.props.increaseFun}>+</button>\n                            &nbsp;\n                        <button className=\"algorithm-button\" onClick={this.props.decreaseFun}>-</button>\n                        </fieldset>\n                    </div>\n                    <div className=\"text-div\">\n                        <button onClick={() => this.connectButtonInput()} className=\"algorithm-button\">Import</button>\n                        <input id=\"upload-file\" onChange={this.props.importState} type=\"file\" hidden></input>\n                        &nbsp;\n                        <button onClick={this.props.exportState} className=\"algorithm-button\">Export</button>\n                        <br /><br />\n                        <span> <em>Moves:</em> </span> <br /> <br />\n                        <div id=\"moves\">\n\n                        </div>\n                    </div>\n                </div>\n            );\n    }\n}\n\nexport default Panel;","import React from 'react';\r\nimport axios from 'axios';\r\nimport Square from './square';\r\nimport Panel from './panel';\r\n\r\nconst getAvailableMovesURL = \"http://127.0.0.1:8000/getAvailableMoves/\";\r\nconst getAvailableBuildsURL = \"http://127.0.0.1:8000/getAvailableBuilds/\";\r\nconst getMoveMinmaxAiURL = \"http://127.0.0.1:8000/minimax/\";\r\nconst getMoveAlphaBetaAiURL = \"http://127.0.0.1:8000/alphaBeta/\";\r\nconst getMoveAlphaBetaCustomAiURL = \"http://127.0.0.1:8000/alphaBetaCustom/\";\r\n\r\nvar gameEnded = false;\r\n\r\nclass Board extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            cells: Array(25).fill(0),\r\n            firstHE: -1,\r\n            secondHE: -1,\r\n            firstJU: -1,\r\n            secondJU: -1,\r\n            availableMovesOrBuilds: [],\r\n            humanNext: true,\r\n        };\r\n\r\n        this.humanPlayer = props.human;\r\n        this.chooseMove = false;\r\n        this.moving = false;\r\n        this.building = false;\r\n        this.buildersSetUp = 0;\r\n        this.lastClickedId = -1;\r\n        this.serverAiMoveURL = getMoveAlphaBetaCustomAiURL;\r\n\r\n        this.whoseMove = \"Jupiter's move\";\r\n\r\n        // values from 9 to 12 belong to Jupiter \r\n        this.upperBoundCellValue = 12;\r\n        this.lowerBoundCellValue = 9;\r\n        this.movesCount = 0;\r\n        this.depth = 4;\r\n    }\r\n\r\n    changeUrl() {\r\n        const alg = document.getElementById(\"algorithm\").value;\r\n        switch (alg) {\r\n            case \"minimax\":\r\n                this.serverAiMoveURL = getMoveMinmaxAiURL;\r\n                break;\r\n            case \"ab\":\r\n                this.serverAiMoveURL = getMoveAlphaBetaAiURL;\r\n                break;\r\n            case \"ab-enhanced\":\r\n                this.serverAiMoveURL = getMoveAlphaBetaCustomAiURL;\r\n                break;\r\n            default:\r\n                this.serverAiMoveURL = getMoveAlphaBetaCustomAiURL;\r\n                break;\r\n        }\r\n        alert(\"Successfully changed algorithm for AI!\");\r\n    }\r\n\r\n    canGoDeeper() {\r\n        if (this.movesCount >= 30)\r\n            this.depth = 5;\r\n\r\n        if (this.movesCount >= 55)\r\n            this.depth = 6;\r\n\r\n        if (this.movesCount >= 70)\r\n            this.depth = 7;\r\n    }\r\n\r\n    clickHandle(idOfCell) {\r\n        if (gameEnded || this.state.humanNext !== true)\r\n            return;\r\n        // if the board is empty, nothing on it yet\r\n        if (this.buildersSetUp < 2) {\r\n            this.setUpBuilders(idOfCell);\r\n\r\n            if (this.buildersSetUp === 2)\r\n                this.setUpAIBuilders();\r\n            return;\r\n        }\r\n\r\n        // If we clicked on our builder\r\n        if (this.lowerBoundCellValue <= this.state.cells[idOfCell] && this.state.cells[idOfCell] <= this.upperBoundCellValue) {\r\n            // If we weren't moving, that is a builder is being selected\r\n            if (this.moving === false && this.building === false && idOfCell !== this.lastClickedId && this.lastClickedId === -1) {\r\n                this.lastClickedId = idOfCell;\r\n                this.chooseMove = true;\r\n            }\r\n            // If we're undo-ing the selection of builder\r\n            else if (idOfCell === this.lastClickedId && this.building === false) {\r\n                this.chooseMove = false;\r\n                this.moving = false;\r\n                this.lastClickedId = -1;\r\n                this.setState({ availableMovesOrBuilds: null });\r\n            }\r\n        }\r\n\r\n        // If we selected a builder then we're in a phase of choosing where to move, builder can still be de-selected\r\n        if (this.chooseMove === true) {\r\n            if (this.lastClickedId === idOfCell)\r\n                this.setupAvailableMoves(idOfCell, getAvailableMovesURL);\r\n            else {\r\n                this.chooseMove = false;\r\n                this.moving = true;\r\n            }\r\n        }\r\n\r\n        // If we decided to move to a certain field and that field is in the list of allowed moves\r\n        if (this.moving === true && this.state.availableMovesOrBuilds.find(x => x === idOfCell) != null) {\r\n            this.moveFigure(this.lastClickedId, idOfCell, () => this.setupAvailableMoves(idOfCell, getAvailableBuildsURL));\r\n            this.lastClickedId = -1;\r\n            this.moving = false;\r\n            this.building = true;\r\n            return;\r\n        }\r\n\r\n        // If we decided to move to a certain field and that field is in the list of allowed moves\r\n        if (this.building === true && this.state.availableMovesOrBuilds.find(x => x === idOfCell) != null) {\r\n            this.buildBlock(idOfCell);\r\n            this.building = false;\r\n            this.setState({ availableMovesOrBuilds: null, humanNext: false }, () => this.doMoveAI(this.serverAiMoveURL, this.depth));\r\n        }\r\n    }\r\n\r\n    doMoveAI(URL, depth) {\r\n        // Check if human won\r\n        this.checkWin();\r\n        this.changeMoveUI();\r\n\r\n        if (gameEnded)\r\n            return;\r\n\r\n        this.getAIMoveFromServer(URL, depth)\r\n            .then((resp) => {\r\n                const buildersID = resp.data.id;\r\n                const move = resp.data.move[0] * 5 + resp.data.move[1];\r\n                const build = resp.data.build[0] * 5 + resp.data.build[1];\r\n\r\n                let coordinatesMoveFrom;\r\n                switch (buildersID) {\r\n                    case 1:\r\n                        coordinatesMoveFrom = this.state.firstHE;\r\n                        break;\r\n                    case 2:\r\n                        coordinatesMoveFrom = this.state.secondHE;\r\n                        break;\r\n                    default:\r\n                        coordinatesMoveFrom = null;\r\n                }\r\n\r\n                this.moveFigure(coordinatesMoveFrom, move);\r\n                this.buildBlock(build);\r\n\r\n                // Check if AI has won\r\n                this.checkWin();\r\n\r\n                this.changeMoveUI();\r\n            });\r\n\r\n    };\r\n\r\n    async getAIMoveFromServer(url, depth) {\r\n        const cells = this.state.cells.slice().map((x) => {\r\n            if (x >= 9)\r\n                return (x + 1) % 5;\r\n            else if (x >= 5)\r\n                return x % 5;\r\n            else\r\n                return x;\r\n        });\r\n\r\n        const data = [{\r\n            cells: cells,\r\n            firstHE: this.state.firstHE,\r\n            secondHE: this.state.secondHE,\r\n            firstJU: this.state.firstJU,\r\n            secondJU: this.state.secondJU,\r\n            startPosition: null,\r\n            depth: depth,\r\n        }];\r\n\r\n        const response = await axios\r\n            .post(url, data)\r\n            .catch((err) => { console.log(err) });\r\n\r\n        return response;\r\n    }\r\n\r\n    setUpBuilders(idOfCell) {\r\n        const cells = this.state.cells;\r\n\r\n        if (cells[idOfCell] !== 0) {\r\n            alert(\"Field is taken, please try again..\");\r\n            return;\r\n        }\r\n\r\n        cells[idOfCell] = 9;\r\n        this.logSetupUI(idOfCell, this.buildersSetUp);\r\n\r\n        this.setState({\r\n            cells: cells,\r\n            firstJU: this.buildersSetUp === 0 ? idOfCell : this.state.firstJU,\r\n            secondJU: this.buildersSetUp === 1 ? idOfCell : this.state.secondJU\r\n        }, () => ++this.buildersSetUp === 2 ? this.setUpAIBuilders() : null);\r\n    }\r\n\r\n    setUpAIBuilders(first = -1, second = -1) {\r\n        const firstJULocal = this.state.firstJU;\r\n        const secondJULocal = this.state.secondJU;\r\n\r\n        let firstHE = 0;\r\n        let secondHE = 0;\r\n\r\n        let combinationsFirst = [7, 6, 8];\r\n        let combinationsSecond = [17, 18, 19];\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            if (combinationsFirst[i] !== firstJULocal && combinationsFirst[i] !== secondJULocal && firstHE === 0)\r\n                firstHE = combinationsFirst[i];\r\n\r\n            if (combinationsSecond[i] !== firstJULocal && combinationsSecond[i] !== secondJULocal && secondHE === 0)\r\n                secondHE = combinationsSecond[i];\r\n\r\n            if (firstHE && secondHE)\r\n                break;\r\n        }\r\n\r\n        if (first !== -1 && second !== -1) {\r\n            firstHE = first;\r\n            secondHE = second;\r\n        }\r\n\r\n        const cells = this.state.cells.slice();\r\n        cells[firstHE] = 5;\r\n        cells[secondHE] = 5;\r\n\r\n        this.logSetupUI(firstHE, 2);\r\n        this.logSetupUI(secondHE, 3);\r\n\r\n        this.setState({\r\n            firstHE: firstHE,\r\n            secondHE: secondHE,\r\n            cells: cells\r\n        });\r\n    }\r\n\r\n    setupAvailableMoves(selectedCoordinate, url) {\r\n        this.getMovesFromServer(selectedCoordinate, url)\r\n            .then((arrayOfMoves) => this.setState({ availableMovesOrBuilds: arrayOfMoves }));\r\n    }\r\n\r\n    async getMovesFromServer(selectedCoordinate, url) {\r\n        const cells = this.state.cells.slice().map((x) => {\r\n            if (x >= 9)\r\n                return (x + 1) % 5;\r\n            else if (x >= 5)\r\n                return x % 5;\r\n            else\r\n                return x;\r\n        });\r\n\r\n        const data = [{\r\n            cells: cells,\r\n            firstHE: this.state.firstHE,\r\n            secondHE: this.state.secondHE,\r\n            firstJU: this.state.firstJU,\r\n            secondJU: this.state.secondJU,\r\n            startPosition: [Math.floor(selectedCoordinate / 5), selectedCoordinate % 5],\r\n            depth: null\r\n        }];\r\n\r\n        const response = await axios\r\n            .post(url, data)\r\n            .catch((err) => { console.log(err) });\r\n        return response.data.moves.map(x => x[0] * 5 + x[1]);\r\n    }\r\n\r\n    // Moving a figure\r\n    moveFigure(fromCell, toCell, callBackFunction) {\r\n        const multiplier = Math.floor((this.state.cells[fromCell] + 1) / 5);\r\n        const cells = this.state.cells.slice();\r\n        const oldValueOfCell = cells[fromCell];\r\n        cells[fromCell] = oldValueOfCell >= 9 ? (cells[fromCell] + 1) % 5 : cells[fromCell] % 5;\r\n        cells[toCell] = oldValueOfCell >= 9 ? 5 * multiplier + cells[toCell] - 1 : 5 * multiplier + cells[toCell];\r\n\r\n        this.logMoveUI(fromCell, false);\r\n        this.logMoveUI(toCell, false);\r\n\r\n        this.setState({\r\n            firstHE: this.state.firstHE === fromCell ? toCell : this.state.firstHE,\r\n            secondHE: this.state.secondHE === fromCell ? toCell : this.state.secondHE,\r\n            firstJU: this.state.firstJU === fromCell ? toCell : this.state.firstJU,\r\n            secondJU: this.state.secondJU === fromCell ? toCell : this.state.secondJU,\r\n            cells: cells,\r\n        }, callBackFunction);\r\n\r\n        this.movesCount++;\r\n        this.canGoDeeper();\r\n    }\r\n\r\n    // Bulding a block\r\n    buildBlock(onCell) {\r\n        const cells = this.state.cells.slice();\r\n        cells[onCell] += 1;\r\n\r\n        this.logMoveUI(onCell, true);\r\n\r\n        this.setState({\r\n            cells: cells,\r\n            humanNext: !this.state.humanNext\r\n        });\r\n    }\r\n\r\n    checkWin() {\r\n        const index = this.state.cells.findIndex(x => x === 12 || x === 8);\r\n        if (index !== -1) {\r\n            switch (this.state.cells[index]) {\r\n                case 8:\r\n                    alert(\"AI won!\");\r\n                    break;\r\n                case 12:\r\n                    alert(\"Human won!\");\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            gameEnded = true;\r\n\r\n            if (window.confirm(\"Do you want to play another game?\")) {\r\n                window.location.reload();\r\n            }\r\n            return;\r\n        }\r\n\r\n        let firstJU = this.state.firstJU;\r\n        let secondJU = this.state.secondJU;\r\n        let firstHE = this.state.firstHE;\r\n        let secondHE = this.state.secondHE;\r\n\r\n        if (this.getMovesFromServer(firstJU, getAvailableMovesURL).length === 0 && this.getMovesFromServer(secondJU, getAvailableMovesURL).length === 0) {\r\n            gameEnded = true;\r\n            alert(\"AI won!\");\r\n        } else if (this.getMovesFromServer(firstHE, getAvailableMovesURL).length === 0 && this.getMovesFromServer(secondHE, getAvailableMovesURL).length === 0) {\r\n            gameEnded = true;\r\n            alert(\"Human won!\");\r\n        }\r\n\r\n        if (gameEnded) {\r\n            if (window.confirm(\"Do you want to play another game?\")) {\r\n                window.location.reload();\r\n            }\r\n        }\r\n    }\r\n\r\n    downloadState() {\r\n        let text = document.getElementById(\"moves\").innerHTML;\r\n        text = text.replace(/\\s?<br>\\s?/g, \"\\n\");\r\n        text += \"\\n\";\r\n\r\n        var element = document.createElement('a');\r\n        element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\r\n        element.setAttribute('download', \"game_state.txt\");\r\n\r\n        element.style.display = 'none';\r\n        document.body.appendChild(element);\r\n\r\n        element.click();\r\n\r\n        document.body.removeChild(element);\r\n    }\r\n\r\n    loadState(event) {\r\n        if (this.state.firstJU === -1) {\r\n            const reader = new FileReader();\r\n            reader.onload = (e) => this.loadMoves(e);\r\n            reader.readAsText(event.target.files[0]);\r\n        } else {\r\n            if (window.confirm(\"You must refresh page before importing a game state.\\nRefresh now?\"))\r\n                window.location.reload();\r\n        }\r\n    }\r\n\r\n    loadMoves(event) {\r\n        const text = event.target.result.trim().split(\"\\n\");\r\n        this.setUpBuildersFromImport(text);\r\n        this.doMovesFromImport(text);\r\n    }\r\n\r\n    doMovesFromImport(text) {\r\n        while (text.length !== 0) {\r\n            let triplet = text.shift();\r\n            let singleMovesArray = triplet.split(\" \");\r\n            let moveFrom = this.convertCoordinatesImport(singleMovesArray[0]);\r\n            let moveTo = this.convertCoordinatesImport(singleMovesArray[1]);\r\n            let buildOn = this.convertCoordinatesImport(singleMovesArray[2]);\r\n\r\n            this.moveFigure(moveFrom, moveTo);\r\n            this.buildBlock(buildOn);\r\n        };\r\n    }\r\n\r\n    setUpBuildersFromImport(text) {\r\n        for (let i = 0; i < 2; i++) {\r\n            let firstRow = text.shift().split(\" \");\r\n            let numberOfCellFirst = this.convertCoordinatesImport(firstRow[0]);\r\n            let numberOfCellSecond = this.convertCoordinatesImport(firstRow[1]);\r\n\r\n            if (i < 1) {\r\n                this.setUpBuilders(numberOfCellFirst);\r\n                this.setUpBuilders(numberOfCellSecond);\r\n            }\r\n            else {\r\n                this.setUpAIBuilders(numberOfCellFirst, numberOfCellSecond);\r\n            }\r\n        }\r\n    }\r\n\r\n    convertCoordinatesImport(coordinateString) {\r\n        let row = coordinateString[0];\r\n        let column = parseInt(coordinateString[1]) - 1;\r\n\r\n        switch (row) {\r\n            case \"A\":\r\n                row = 0;\r\n                break;\r\n            case \"B\":\r\n                row = 1;\r\n                break;\r\n            case \"C\":\r\n                row = 2;\r\n                break;\r\n            case \"D\":\r\n                row = 3;\r\n                break;\r\n            case \"E\":\r\n                row = 4;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return row * 5 + column;\r\n    }\r\n\r\n    incDepth() {\r\n        this.depth++;\r\n        this.updateDepthUI();\r\n    }\r\n\r\n    decDepth() {\r\n        if (this.depth === 1)\r\n            return;\r\n\r\n        this.depth--;\r\n        this.updateDepthUI();\r\n    }\r\n\r\n    updateDepthUI() {\r\n        const depthSpan = document.getElementById(\"graph-depth\");\r\n        depthSpan.textContent = this.depth;\r\n    }\r\n\r\n    logMoveUI(move, isBuild) {\r\n        const movesDiv = document.getElementById(\"moves\");\r\n        let resString = this.convertCoordinatesExport(move);\r\n\r\n        if (isBuild)\r\n            resString += \"<br>\";\r\n\r\n        movesDiv.innerHTML += resString;\r\n    }\r\n\r\n    logSetupUI(whereSetUp, builderNumber) {\r\n        const movesDiv = document.getElementById(\"moves\");\r\n        let resString = this.convertCoordinatesExport(whereSetUp);\r\n\r\n        switch (builderNumber) {\r\n            case 1:\r\n            case 3:\r\n                resString += \"<br>\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        movesDiv.innerHTML += resString;\r\n    }\r\n\r\n    convertCoordinatesExport(coordinate) {\r\n        let row = Math.floor(coordinate / 5);\r\n        let column = coordinate % 5;\r\n\r\n        let resultString = \"\";\r\n\r\n        switch (row) {\r\n            case 0:\r\n                resultString += \"A\";\r\n                break;\r\n            case 1:\r\n                resultString += \"B\";\r\n                break;\r\n            case 2:\r\n                resultString += \"C\";\r\n                break;\r\n            case 3:\r\n                resultString += \"D\";\r\n                break;\r\n            case 4:\r\n                resultString += \"E\";\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n\r\n        resultString += String(column + 1) + \" \";\r\n        return resultString;\r\n    }\r\n\r\n    changeMoveUI() {\r\n        switch (this.state.humanNext) {\r\n            case false:\r\n                this.whoseMove = \"Hercules's move\";\r\n                break;\r\n            case true:\r\n                this.whoseMove = \"Jupiter's move\";\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n\r\n        document.getElementsByClassName(\"who-move\")[0].textContent = this.whoseMove;\r\n    }\r\n\r\n    render() {\r\n        const sources = this.state.cells.map((square) => this.getImageSourceCell(square));\r\n        return (\r\n            <div className=\"main-div\">\r\n                <Panel side=\"left\" class=\"left-panel\" />\r\n\r\n                <div className=\"board\">\r\n                    <div className=\"first-row\">\r\n                        <div className=\"column-number-cell\">\r\n                            1\r\n                        </div>\r\n                        <div className=\"column-number-cell\">\r\n                            2\r\n                        </div>\r\n                        <div className=\"column-number-cell\">\r\n                            3\r\n                        </div>\r\n                        <div className=\"column-number-cell\">\r\n                            4\r\n                        </div>\r\n                        <div className=\"column-number-cell\">\r\n                            5\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"board-row\">\r\n                        <span className=\"row-number-cell\">A</span>\r\n                        {this.renderSquare(sources[0], 0)}\r\n                        {this.renderSquare(sources[1], 1)}\r\n                        {this.renderSquare(sources[2], 2)}\r\n                        {this.renderSquare(sources[3], 3)}\r\n                        {this.renderSquare(sources[4], 4)}\r\n                    </div>\r\n                    <div className=\"board-row\">\r\n                        <span className=\"row-number-cell\">B</span>\r\n                        {this.renderSquare(sources[5], 5)}\r\n                        {this.renderSquare(sources[6], 6)}\r\n                        {this.renderSquare(sources[7], 7)}\r\n                        {this.renderSquare(sources[8], 8)}\r\n                        {this.renderSquare(sources[9], 9)}\r\n                    </div>\r\n                    <div className=\"board-row\">\r\n                        <span className=\"row-number-cell\">C</span>\r\n                        {this.renderSquare(sources[10], 10)}\r\n                        {this.renderSquare(sources[11], 11)}\r\n                        {this.renderSquare(sources[12], 12)}\r\n                        {this.renderSquare(sources[13], 13)}\r\n                        {this.renderSquare(sources[14], 14)}\r\n                    </div>\r\n                    <div className=\"board-row\">\r\n                        <span className=\"row-number-cell\">D</span>\r\n                        {this.renderSquare(sources[15], 15)}\r\n                        {this.renderSquare(sources[16], 16)}\r\n                        {this.renderSquare(sources[17], 17)}\r\n                        {this.renderSquare(sources[18], 18)}\r\n                        {this.renderSquare(sources[19], 19)}\r\n                    </div>\r\n                    <div className=\"board-row\">\r\n                        <span className=\"row-number-cell\">E</span>\r\n                        {this.renderSquare(sources[20], 20)}\r\n                        {this.renderSquare(sources[21], 21)}\r\n                        {this.renderSquare(sources[22], 22)}\r\n                        {this.renderSquare(sources[23], 23)}\r\n                        {this.renderSquare(sources[24], 24)}\r\n                    </div>\r\n                    <span className=\"who-move\">{this.whoseMove}</span>\r\n                </div>\r\n                <Panel\r\n                    side=\"right\"\r\n                    algorithmFun={() => this.changeUrl()}\r\n                    increaseFun={() => this.incDepth()}\r\n                    decreaseFun={() => this.decDepth()}\r\n                    importState={(e) => this.loadState(e)}\r\n                    exportState={() => this.downloadState()}\r\n                    class=\"right-panel\"\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Choosing a path for the image source for the appropriate value\r\n    getImageSourceCell(i) {\r\n        switch (i) {\r\n            case 0:\r\n                return \"lvl_0.jpg\";\r\n            case 1:\r\n                return \"lvl_1.png\";\r\n            case 2:\r\n                return \"lvl_2.png\";\r\n            case 3:\r\n                return \"lvl_3.png\";\r\n            case 4:\r\n                return \"lvl_4.png\";\r\n            case 5:\r\n                return \"hercules.png\";\r\n            case 6:\r\n                return \"lvl_1_HE.png\";\r\n            case 7:\r\n                return \"lvl_2_HE.png\";\r\n            case 8:\r\n                return \"lvl_3_HE.png\";\r\n            case 9:\r\n                return \"jupiter.png\";\r\n            case 10:\r\n                return \"lvl_1_JU.png\";\r\n            case 11:\r\n                return \"lvl_2_JU.png\";\r\n            case 12:\r\n                return \"lvl_3_JU.png\";\r\n            default:\r\n                return \"\";\r\n        }\r\n    }\r\n\r\n    renderSquare(source, idOfCell) {\r\n        const glowing = this.state.availableMovesOrBuilds?.find(x => x === idOfCell) != null ? true : false;\r\n        return (\r\n            <Square\r\n                src={`/static/images/${source}`}\r\n                onClick={() => this.clickHandle(idOfCell)}\r\n                glowing={glowing}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Board;\r\n","import React from 'react';\r\nimport Board from './boardHuAi';\r\n\r\nclass Game extends React.Component {\r\n    render() {\r\n        return (\r\n            <Board human=\"JU\" />\r\n        )\r\n    }\r\n}\r\n\r\nexport default Game;\r\n","import Game from './components/game';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './game.css';\r\n\r\nReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}