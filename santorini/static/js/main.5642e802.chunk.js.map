{"version":3,"sources":["components/square.js","components/panel.js","components/boardAiAi.js","components/game.js","index.js"],"names":["Square","props","glowing","className","onClick","src","alt","width","height","Panel","document","getElementById","click","this","side","class","href","id","value","selected","algorithmFun","increaseFun","decreaseFun","connectButtonInput","onChange","importState","type","hidden","exportState","React","Component","getAvailableMovesURL","gameEnded","Board","state","cells","Array","fill","firstHE","secondHE","firstJU","secondJU","availableMovesOrBuilds","minNext","serverAiMoveURL","whoseMove","movesCount","depth","start","window","confirm","setUpAIBuilders","doMoveAI","alert","idOfCell","URL","checkWin","changeMoveUI","getAIMoveFromServer","then","resp","coordinatesMoveFrom","buildersID","data","move","build","moveFigure","buildBlock","url","slice","map","x","startPosition","axios","post","catch","err","console","log","response","firstp1","secondp1","firstp2","secondp2","indexes","i","newIndex","Math","floor","random","indexOf","push","logSetupUI","setState","selectedCoordinate","getMovesFromServer","arrayOfMoves","moves","fromCell","toCell","callBackFunction","multiplier","oldValueOfCell","logMoveUI","canGoDeeper","onCell","index","findIndex","location","reload","length","text","innerHTML","replace","element","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","removeChild","event","reader","FileReader","onload","e","loadMoves","readAsText","target","files","result","trim","split","setUpBuildersFromImport","doMovesFromImport","singleMovesArray","shift","moveFrom","convertCoordinatesImport","moveTo","buildOn","firstRow","secondRow","coordinateString","row","column","parseInt","updateDepthUI","coordinate","resultString","String","isBuild","movesDiv","resString","convertCoordinatesOut","whereSetUp","builderNumber","textContent","getElementsByClassName","sources","square","getImageSourceCell","renderSquare","nextMove","changeUrl","incDepth","decDepth","loadState","downloadState","source","find","clickHandle","Game","human","ReactDOM","render"],"mappings":"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","file":"static/js/main.5642e802.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Square(props) {\r\n    return props.glowing === true ?\r\n        (\r\n            <button className=\"square glowing\" onClick={props.onClick}>\r\n                <img src={props.src} alt=\"Polje\" width=\"100%\" height=\"100%\"></img>\r\n            </button>\r\n        ):\r\n        (\r\n            <button className=\"square\" onClick={props.onClick}>\r\n                <img src={props.src} alt=\"Polje\" width=\"100%\" height=\"100%\"></img>\r\n            </button>\r\n        )\r\n}\r\n\r\nexport default Square;\r\n","import React from 'react';\n\nclass Panel extends React.Component {\n    connectButtonInput() {\n        const inputFile = document.getElementById(\"upload-file\");\n        inputFile.click();\n    }\n\n    render() {\n        if (this.props.side === \"left\")\n            return (\n                <div className={this.props.class}>\n                    <a href=\"http://127.0.0.1:8000/home\">\n                        <img id=\"back-img\" width=\"100em\" height=\"100em\" src=\"/static/images/back-button.png\" alt=\"back-button\"></img>\n                    </a>\n                    <div className=\"text-div\">\n                        <ol>\n                            <em><h3>Instructions</h3></em>\n                            <li><b>Click</b> on the two of available fields to set builder</li>\n                            <li><b>Click</b> on one builder to select, move and build with him on one of the highlighted fields</li>\n                            <li><em><b>Goal</b> is to get to the third floor, good luck!</em></li>\n                        </ol>\n                    </div>\n                </div>\n            );\n        else\n            return (\n                <div className={this.props.class}>\n                    <div className=\"algorithm-box\">\n                        <fieldset>\n                            <legend>\n                                <em>Algorithm</em>\n                            </legend>\n                            <select id=\"algorithm\">\n                                <option value=\"minimax\">Minimax</option>\n                                <option value=\"ab\">α - β</option>\n                                <option selected value=\"ab-enhanced\">α - β enhanced</option>\n                            </select>\n                            <button className=\"algorithm-button\" onClick={this.props.algorithmFun}>\n                                Choose algorithm\n                        </button>\n                        </fieldset>\n                        <fieldset>\n                            <legend>\n                                <em>Depth</em> <b><span id=\"graph-depth\">4</span></b>\n                            </legend>\n                            <button className=\"algorithm-button\" onClick={this.props.increaseFun}>+</button>\n                            &nbsp;\n                        <button className=\"algorithm-button\" onClick={this.props.decreaseFun}>-</button>\n                        </fieldset>\n                    </div>\n                    <div className=\"text-div\">\n                        <button onClick={() => this.connectButtonInput()} className=\"algorithm-button\">Import</button>\n                        <input id=\"upload-file\" onChange={this.props.importState} type=\"file\" hidden></input>\n                        &nbsp;\n                        <button onClick={this.props.exportState} className=\"algorithm-button\">Export</button>\n                        <br /><br />\n                        <span> <em>Moves:</em> </span> <br /> <br />\n                        <div id=\"moves\">\n\n                        </div>\n                    </div>\n                </div>\n            );\n    }\n}\n\nexport default Panel;\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport Square from './square';\r\nimport Panel from './panel';\r\n\r\nconst getAvailableMovesURL = \"http://127.0.0.1:8000/getAvailableMoves/\";\r\nconst getMoveMinmaxAiURL = \"http://127.0.0.1:8000/minimax/\";\r\nconst getMoveAlphaBetaAiURL = \"http://127.0.0.1:8000/alphaBeta/\";\r\nconst getMoveAlphaBetaCustomAiURL = \"http://127.0.0.1:8000/alphaBetaCustom/\";\r\n\r\nvar gameEnded = false;\r\n\r\nclass Board extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            cells: Array(25).fill(0),\r\n            firstHE: -1,\r\n            secondHE: -1,\r\n            firstJU: -1,\r\n            secondJU: -1,\r\n            availableMovesOrBuilds: [],\r\n            minNext: true,\r\n        };\r\n        this.serverAiMoveURL = getMoveAlphaBetaCustomAiURL;\r\n\r\n        this.whoseMove = \"Jupiter's move\";\r\n\r\n        this.movesCount = 0;\r\n        this.depth = 4;\r\n        this.start = false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (window.confirm(\"Start the Skynet?\")) {\r\n            this.setUpAIBuilders();\r\n        }\r\n    }\r\n\r\n    nextMove() {\r\n        this.doMoveAI(this.serverAiMoveURL, this.depth);\r\n    }\r\n\r\n    changeUrl() {\r\n        const alg = document.getElementById(\"algorithm\").value;\r\n        switch (alg) {\r\n            case \"minimax\":\r\n                this.serverAiMoveURL = getMoveMinmaxAiURL;\r\n                break;\r\n            case \"ab\":\r\n                this.serverAiMoveURL = getMoveAlphaBetaAiURL;\r\n                break;\r\n            case \"ab-enhanced\":\r\n                this.serverAiMoveURL = getMoveAlphaBetaCustomAiURL;\r\n                break;\r\n            default:\r\n                this.serverAiMoveURL = getMoveAlphaBetaCustomAiURL;\r\n                break;\r\n        }\r\n        alert(\"Successfully changed algorithm for AI!\");\r\n    }\r\n\r\n    canGoDeeper() {\r\n        if (this.movesCount >= 30)\r\n            this.depth = 5;\r\n\r\n        if (this.movesCount >= 55)\r\n            this.depth = 6;\r\n\r\n        if (this.movesCount >= 70)\r\n            this.depth = 7;\r\n    }\r\n\r\n    clickHandle(idOfCell) {\r\n        alert(\"Game in progress, AI vs AI, you cannot do anything to stop them. >:D\");\r\n        return\r\n    }\r\n\r\n    doMoveAI(URL, depth) {\r\n        this.checkWin();\r\n        this.changeMoveUI();\r\n\r\n        if (gameEnded)\r\n            return;\r\n\r\n        this.getAIMoveFromServer(URL, depth)\r\n            .then((resp) => {\r\n                const buildersID = resp.data.id;\r\n                const move = resp.data.move[0] * 5 + resp.data.move[1];\r\n                const build = resp.data.build[0] * 5 + resp.data.build[1];\r\n\r\n                let coordinatesMoveFrom;\r\n                switch (buildersID) {\r\n                    case 1:\r\n                        coordinatesMoveFrom = this.state.firstHE;\r\n                        break;\r\n                    case 2:\r\n                        coordinatesMoveFrom = this.state.secondHE;\r\n                        break;\r\n                    case 3:\r\n                        coordinatesMoveFrom = this.state.firstJU;\r\n                        break;\r\n                    case 4:\r\n                        coordinatesMoveFrom = this.state.secondJU;\r\n                        break;\r\n                    default:\r\n                        coordinatesMoveFrom = null;\r\n                }\r\n\r\n                this.moveFigure(coordinatesMoveFrom, move);\r\n                this.buildBlock(build);\r\n\r\n                this.checkWin();\r\n\r\n                this.changeMoveUI();\r\n            });\r\n\r\n    };\r\n\r\n    async getAIMoveFromServer(url, depth) {\r\n        const cells = this.state.cells.slice().map((x) => {\r\n            if (x >= 9)\r\n                return (x + 1) % 5;\r\n            else if (x >= 5)\r\n                return x % 5;\r\n            else\r\n                return x;\r\n        });\r\n\r\n        const data = [{\r\n            cells: cells,\r\n            firstHE: this.state.firstHE,\r\n            secondHE: this.state.secondHE,\r\n            firstJU: this.state.firstJU,\r\n            secondJU: this.state.secondJU,\r\n            minNext: this.state.minNext,\r\n            startPosition: null,\r\n            depth: depth,\r\n        }];\r\n\r\n        const response = await axios\r\n            .post(url, data)\r\n            .catch((err) => { console.log(err) });\r\n\r\n        return response;\r\n    }\r\n\r\n    setUpAIBuilders(firstp1 = -1, secondp1 = -1, firstp2 = -1, secondp2 = -1) {\r\n        let indexes = []\r\n        for (let i = 0; i < 4;) {\r\n            let newIndex = Math.floor(Math.random() * 24);\r\n            if (indexes.indexOf(newIndex) === -1) {\r\n                indexes.push(newIndex);\r\n                i++;\r\n            }\r\n        }\r\n\r\n        let firstHE = firstp1 === -1 ? indexes[0] : firstp1;\r\n        let secondHE = secondp1 === -1 ? indexes[2] : secondp1;\r\n        let firstJU = firstp2 === -1 ? indexes[1] : firstp2;\r\n        let secondJU = secondp2 === -1 ? indexes[3] : secondp2;\r\n\r\n\r\n        const cells = this.state.cells.slice();\r\n        cells[firstHE] = 5;\r\n        cells[secondHE] = 5;\r\n        cells[firstJU] = 9;\r\n        cells[secondJU] = 9;\r\n\r\n        this.logSetupUI(firstHE, 0);\r\n        this.logSetupUI(secondHE, 1);\r\n        this.logSetupUI(firstJU, 2)\r\n        this.logSetupUI(secondJU, 3);\r\n\r\n        this.setState({\r\n            firstHE: firstHE,\r\n            secondHE: secondHE,\r\n            firstJU: firstJU,\r\n            secondJU: secondJU,\r\n            cells: cells\r\n        });\r\n    }\r\n\r\n    setupAvailableMoves(selectedCoordinate, url) {\r\n        this.getMovesFromServer(selectedCoordinate, url)\r\n            .then((arrayOfMoves) => this.setState({ availableMovesOrBuilds: arrayOfMoves }));\r\n    }\r\n\r\n    async getMovesFromServer(selectedCoordinate, url) {\r\n        const cells = this.state.cells.slice().map((x) => {\r\n            if (x >= 9)\r\n                return (x + 1) % 5;\r\n            else if (x >= 5)\r\n                return x % 5;\r\n            else\r\n                return x;\r\n        });\r\n\r\n        const data = [{\r\n            cells: cells,\r\n            firstHE: this.state.firstHE,\r\n            secondHE: this.state.secondHE,\r\n            firstJU: this.state.firstJU,\r\n            secondJU: this.state.secondJU,\r\n            startPosition: [Math.floor(selectedCoordinate / 5), selectedCoordinate % 5],\r\n            depth: null\r\n        }];\r\n\r\n        const response = await axios\r\n            .post(url, data)\r\n            .catch((err) => { console.log(err) });\r\n        return response.data.moves.map(x => x[0] * 5 + x[1]);\r\n    }\r\n\r\n    // Moving a figure\r\n    moveFigure(fromCell, toCell, callBackFunction) {\r\n        const multiplier = Math.floor((this.state.cells[fromCell] + 1) / 5);\r\n        const cells = this.state.cells.slice();\r\n        const oldValueOfCell = cells[fromCell];\r\n        cells[fromCell] = oldValueOfCell >= 9 ? (cells[fromCell] + 1) % 5 : cells[fromCell] % 5;\r\n        cells[toCell] = oldValueOfCell >= 9 ? 5 * multiplier + cells[toCell] - 1 : 5 * multiplier + cells[toCell];\r\n\r\n        this.logMoveUI(fromCell, false);\r\n        this.logMoveUI(toCell, false);\r\n\r\n        this.setState({\r\n            firstHE: this.state.firstHE === fromCell ? toCell : this.state.firstHE,\r\n            secondHE: this.state.secondHE === fromCell ? toCell : this.state.secondHE,\r\n            firstJU: this.state.firstJU === fromCell ? toCell : this.state.firstJU,\r\n            secondJU: this.state.secondJU === fromCell ? toCell : this.state.secondJU,\r\n            cells: cells,\r\n        }, callBackFunction);\r\n\r\n        this.movesCount++;\r\n        this.canGoDeeper();\r\n    }\r\n\r\n    // Bulding a block\r\n    buildBlock(onCell) {\r\n        const cells = this.state.cells.slice();\r\n        cells[onCell] += 1;\r\n\r\n        this.logMoveUI(onCell, true);\r\n\r\n        this.setState({\r\n            cells: cells,\r\n            minNext: !this.state.minNext\r\n        });\r\n    }\r\n\r\n    checkWin() {\r\n        const index = this.state.cells.findIndex(x => x === 12 || x === 8);\r\n        if (index !== -1) {\r\n            switch (this.state.cells[index]) {\r\n                case 8:\r\n                    alert(\"Hercules won!\");\r\n                    break;\r\n                case 12:\r\n                    alert(\"Jupiter won!\");\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            gameEnded = true;\r\n\r\n            if (window.confirm(\"Do you want to play another game?\")) {\r\n                window.location.reload();\r\n            }\r\n            return;\r\n        }\r\n\r\n        let firstJU = this.state.firstJU;\r\n        let secondJU = this.state.secondJU;\r\n        let firstHE = this.state.firstHE;\r\n        let secondHE = this.state.secondHE;\r\n\r\n        if (this.getMovesFromServer(firstJU, getAvailableMovesURL).length === 0 && this.getMovesFromServer(secondJU, getAvailableMovesURL).length === 0) {\r\n            gameEnded = true;\r\n            alert(\"Hercules won!\");\r\n        } else if (this.getMovesFromServer(firstHE, getAvailableMovesURL).length === 0 && this.getMovesFromServer(secondHE, getAvailableMovesURL).length === 0) {\r\n            gameEnded = true;\r\n            alert(\"Jupiter won!\");\r\n        }\r\n\r\n        if (gameEnded) {\r\n            if (window.confirm(\"Do you want to play another game?\")) {\r\n                window.location.reload();\r\n            }\r\n        }\r\n    }\r\n    \r\n    downloadState() {\r\n        let text = document.getElementById(\"moves\").innerHTML;\r\n        text = text.replace(/\\s?<br>\\s?/g, \"\\n\");\r\n        text += \"\\n\";\r\n\r\n        var element = document.createElement('a');\r\n        element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\r\n        element.setAttribute('download', \"game_state.txt\");\r\n\r\n        element.style.display = 'none';\r\n        document.body.appendChild(element);\r\n\r\n        element.click();\r\n\r\n        document.body.removeChild(element);\r\n    }\r\n\r\n    loadState(event) {\r\n        if (this.state.firstJU === -1) {\r\n            const reader = new FileReader();\r\n            reader.onload = (e) => this.loadMoves(e);\r\n            reader.readAsText(event.target.files[0]);\r\n        } else {\r\n            if (window.confirm(\"You must refresh page before importing a game state.\\nRefresh now?\"))\r\n                window.location.reload();\r\n        }\r\n    }\r\n\r\n    loadMoves(event) {\r\n        const text = event.target.result.trim().split(\"\\n\");\r\n        this.setUpBuildersFromImport(text);\r\n        this.doMovesFromImport(text);\r\n    }\r\n\r\n    doMovesFromImport(text) {\r\n        while (text.length !== 0) {\r\n            let triplet = text.shift();\r\n            let singleMovesArray = triplet.split(\" \");\r\n            let moveFrom = this.convertCoordinatesImport(singleMovesArray[0]);\r\n            let moveTo = this.convertCoordinatesImport(singleMovesArray[1]);\r\n            let buildOn = this.convertCoordinatesImport(singleMovesArray[2]);\r\n\r\n            this.moveFigure(moveFrom, moveTo);\r\n            this.buildBlock(buildOn);\r\n        };\r\n    }\r\n\r\n    setUpBuildersFromImport(text) {\r\n            let firstRow = text.shift().split(\" \");\r\n            let firstp1 = this.convertCoordinatesImport(firstRow[0]);\r\n            let secondp1 = this.convertCoordinatesImport(firstRow[1]);\r\n\r\n            let secondRow = text.shift().split(\" \");\r\n            let firstp2 = this.convertCoordinatesImport(secondRow[0]);\r\n            let secondp2 = this.convertCoordinatesImport(secondRow[1]);\r\n\r\n            this.setUpAIBuilders(firstp1, secondp1, firstp2, secondp2);\r\n    }\r\n\r\n    convertCoordinatesImport(coordinateString) {\r\n        let row = coordinateString[0];\r\n        let column = parseInt(coordinateString[1]) - 1;\r\n\r\n        switch (row) {\r\n            case \"A\":\r\n                row = 0;\r\n                break;\r\n            case \"B\":\r\n                row = 1;\r\n                break;\r\n            case \"C\":\r\n                row = 2;\r\n                break;\r\n            case \"D\":\r\n                row = 3;\r\n                break;\r\n            case \"E\":\r\n                row = 4;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return row * 5 + column;\r\n    }\r\n\r\n\r\n    incDepth() {\r\n        this.depth++;\r\n        this.updateDepthUI();\r\n    }\r\n\r\n    decDepth() {\r\n        if (this.depth === 1)\r\n            return;\r\n\r\n        this.depth--;\r\n        this.updateDepthUI();\r\n    }\r\n\r\n    convertCoordinatesOut(coordinate) {\r\n        let row = Math.floor(coordinate / 5);\r\n        let column = coordinate % 5;\r\n\r\n        let resultString = \"\";\r\n\r\n        switch (row) {\r\n            case 0:\r\n                resultString += \"A\";\r\n                break;\r\n            case 1:\r\n                resultString += \"B\";\r\n                break;\r\n            case 2:\r\n                resultString += \"C\";\r\n                break;\r\n            case 3:\r\n                resultString += \"D\";\r\n                break;\r\n            case 4:\r\n                resultString += \"E\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        \r\n        resultString += String(column + 1) + \" \";\r\n        return resultString;\r\n    }\r\n\r\n    logMoveUI(move, isBuild) {\r\n        const movesDiv = document.getElementById(\"moves\");\r\n        let resString = this.convertCoordinatesOut(move);\r\n\r\n        if (isBuild)\r\n            resString += \"<br>\";\r\n\r\n        movesDiv.innerHTML += resString;\r\n    }\r\n\r\n    logSetupUI(whereSetUp, builderNumber) {\r\n        const movesDiv = document.getElementById(\"moves\");\r\n        let resString = this.convertCoordinatesOut(whereSetUp);\r\n        \r\n        switch(builderNumber) {\r\n            case 1:\r\n            case 3:\r\n                resString += \"<br>\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        movesDiv.innerHTML += resString;\r\n    }\r\n\r\n    updateDepthUI() {\r\n        const depthSpan = document.getElementById(\"graph-depth\");\r\n        depthSpan.textContent = this.depth;\r\n    }\r\n\r\n    changeMoveUI() {\r\n        switch (this.state.minNext) {\r\n            case false:\r\n                this.whoseMove = \"Hercules's move\";\r\n                break;\r\n            case true:\r\n                this.whoseMove = \"Jupiter's move\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        document.getElementsByClassName(\"who-move\")[0].textContent = this.whoseMove;\r\n    }\r\n\r\n    render() {\r\n        const sources = this.state.cells.map((square) => this.getImageSourceCell(square));\r\n        return (\r\n            <div className=\"main-div\">\r\n                <Panel side=\"left\" class=\"left-panel\" />\r\n                <div className=\"board\">\r\n                    <div className=\"first-row\">\r\n                        <div className=\"column-number-cell\">\r\n                            1\r\n                        </div>\r\n                        <div className=\"column-number-cell\">\r\n                            2\r\n                        </div>\r\n                        <div className=\"column-number-cell\">\r\n                            3\r\n                        </div>\r\n                        <div className=\"column-number-cell\">\r\n                            4\r\n                        </div>\r\n                        <div className=\"column-number-cell\">\r\n                            5\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"board-row\">\r\n                        <span className=\"row-number-cell\">A</span>\r\n                        {this.renderSquare(sources[0], 0)}\r\n                        {this.renderSquare(sources[1], 1)}\r\n                        {this.renderSquare(sources[2], 2)}\r\n                        {this.renderSquare(sources[3], 3)}\r\n                        {this.renderSquare(sources[4], 4)}\r\n                    </div>\r\n                    <div className=\"board-row\">\r\n                        <span className=\"row-number-cell\">B</span>\r\n                        {this.renderSquare(sources[5], 5)}\r\n                        {this.renderSquare(sources[6], 6)}\r\n                        {this.renderSquare(sources[7], 7)}\r\n                        {this.renderSquare(sources[8], 8)}\r\n                        {this.renderSquare(sources[9], 9)}\r\n                    </div>\r\n                    <div className=\"board-row\">\r\n                        <span className=\"row-number-cell\">C</span>\r\n                        {this.renderSquare(sources[10], 10)}\r\n                        {this.renderSquare(sources[11], 11)}\r\n                        {this.renderSquare(sources[12], 12)}\r\n                        {this.renderSquare(sources[13], 13)}\r\n                        {this.renderSquare(sources[14], 14)}\r\n                    </div>\r\n                    <div className=\"board-row\">\r\n                        <span className=\"row-number-cell\">D</span>\r\n                        {this.renderSquare(sources[15], 15)}\r\n                        {this.renderSquare(sources[16], 16)}\r\n                        {this.renderSquare(sources[17], 17)}\r\n                        {this.renderSquare(sources[18], 18)}\r\n                        {this.renderSquare(sources[19], 19)}\r\n                    </div>\r\n                    <div className=\"board-row\">\r\n                        <span className=\"row-number-cell\">E</span>\r\n                        {this.renderSquare(sources[20], 20)}\r\n                        {this.renderSquare(sources[21], 21)}\r\n                        {this.renderSquare(sources[22], 22)}\r\n                        {this.renderSquare(sources[23], 23)}\r\n                        {this.renderSquare(sources[24], 24)}\r\n                    </div>\r\n                    <button onClick={() => this.nextMove()} className=\"who-move\">{this.whoseMove} [CLICK TO BEGIN]</button>\r\n                </div>\r\n                <Panel\r\n                    side=\"right\"\r\n                    algorithmFun={() => this.changeUrl()}\r\n                    increaseFun={() => this.incDepth()}\r\n                    decreaseFun={() => this.decDepth()}\r\n                    class=\"right-panel\"\r\n                    importState={(e) => this.loadState(e)}\r\n                    exportState={() => this.downloadState()}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Choosing a path for the image source for the appropriate value\r\n    getImageSourceCell(i) {\r\n        switch (i) {\r\n            case 0:\r\n                return \"lvl_0.jpg\";\r\n            case 1:\r\n                return \"lvl_1.png\";\r\n            case 2:\r\n                return \"lvl_2.png\";\r\n            case 3:\r\n                return \"lvl_3.png\";\r\n            case 4:\r\n                return \"lvl_4.png\";\r\n            case 5:\r\n                return \"hercules.png\";\r\n            case 6:\r\n                return \"lvl_1_HE.png\";\r\n            case 7:\r\n                return \"lvl_2_HE.png\";\r\n            case 8:\r\n                return \"lvl_3_HE.png\";\r\n            case 9:\r\n                return \"jupiter.png\";\r\n            case 10:\r\n                return \"lvl_1_JU.png\";\r\n            case 11:\r\n                return \"lvl_2_JU.png\";\r\n            case 12:\r\n                return \"lvl_3_JU.png\";\r\n            default:\r\n                return \"\";\r\n        }\r\n    }\r\n\r\n    renderSquare(source, idOfCell) {\r\n        const glowing = this.state.availableMovesOrBuilds?.find(x => x === idOfCell) != null ? true : false;\r\n        return (\r\n            <Square\r\n                src={`../images/${source}`}\r\n                onClick={() => this.clickHandle(idOfCell)}\r\n                glowing={glowing}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Board;\r\n","import React from 'react';\r\nimport Board from './boardAiAi';\r\n\r\nclass Game extends React.Component {\r\n    render() {\r\n        return (\r\n            <Board human=\"JU\" />\r\n        )\r\n    }\r\n}\r\n\r\nexport default Game;\r\n","import Game from './components/game';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './game.css';\r\n\r\nReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}