{"version":3,"sources":["components/square.js","components/panel.js","components/boardHuHu.js","components/game.js","index.js"],"names":["Square","props","glowing","className","onClick","src","alt","width","height","Panel","document","getElementById","click","this","side","class","href","id","connectButtonInput","onChange","importState","type","hidden","exportState","React","Component","getAvailableMovesURL","gameEnded","Board","state","cells","Array","fill","firstHE","secondHE","firstJU","secondJU","availableMovesOrBuilds","juNext","humanPlayer","human","chooseMove","moving","building","buildersSetUp","lastClickedId","whoseMove","upperBoundCellValueJU","lowerBoundCellValueJU","upperBoundCellValueHE","lowerBoundCellValueHE","idOfCell","setUpBuilders","lowerBoundCellValue","upperBoundCellValue","setState","setupAvailableMoves","find","x","moveFigure","buildBlock","changeMoveUI","logSetupUI","alert","selectedCoordinate","url","getMovesFromServer","then","arrayOfMoves","slice","map","data","startPosition","Math","floor","depth","axios","post","catch","err","console","log","response","moves","fromCell","toCell","callBackFunction","multiplier","oldValueOfCell","logMoveUI","onCell","checkWin","index","findIndex","window","confirm","location","reload","length","text","innerHTML","replace","element","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","removeChild","event","reader","FileReader","onload","e","loadMoves","readAsText","target","files","result","trim","split","setUpBuildersFromImport","doMovesFromImport","i","firstRow","shift","numberOfCellFirst","convertCoordinatesImport","numberOfCellSecond","singleMovesArray","moveFrom","moveTo","buildOn","coordinateString","row","column","parseInt","coordinate","resultString","String","move","isBuild","movesDiv","resString","convertCoordinatesOut","whereSetUp","builderNumber","getElementsByClassName","textContent","sources","square","getImageSourceCell","renderSquare","loadState","downloadState","source","clickHandle","Game","ReactDOM","render"],"mappings":"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","file":"static/js/main.9219f912.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Square(props) {\r\n    return props.glowing === true ?\r\n        (\r\n            <button className=\"square glowing\" onClick={props.onClick}>\r\n                <img src={props.src} alt=\"Polje\" width=\"100%\" height=\"100%\"></img>\r\n            </button>\r\n        ):\r\n        (\r\n            <button className=\"square\" onClick={props.onClick}>\r\n                <img src={props.src} alt=\"Polje\" width=\"100%\" height=\"100%\"></img>\r\n            </button>\r\n        )\r\n}\r\n\r\nexport default Square;\r\n","import React from 'react';\n\nclass Panel extends React.Component {\n    connectButtonInput() {\n        const inputFile = document.getElementById(\"upload-file\");\n        inputFile.click();\n    }\n\n    render() {\n        if (this.props.side === \"left\")\n            return (\n                <div className={this.props.class}>\n                    <a href=\"http://127.0.0.1:8000/home\">\n                        <img id=\"back-img\" width=\"100em\" height=\"100em\" src=\"/static/images/back-button.png\" alt=\"back-button\"></img>\n                    </a>\n                    <div className=\"text-div\">\n                        <ol>\n                            <em><h3>Instructions</h3></em>\n                            <li><b>Click</b> on the two of available fields to set builder</li>\n                            <li><b>Click</b> on one builder to select, move and build with him on one of the highlighted fields</li>\n                            <li><em><b>Goal</b> is to get to the third floor, good luck!</em></li>\n                        </ol>\n                    </div>\n                </div>\n            );\n        else\n            return (\n                <div className={this.props.class}>\n                    <div className=\"text-div\">\n                        <button onClick={() => this.connectButtonInput()} className=\"algorithm-button\">Import</button>\n                        <input id=\"upload-file\" onChange={this.props.importState} type=\"file\" hidden></input>\n                        &nbsp;\n                        <button onClick={this.props.exportState} className=\"algorithm-button\">Export</button>\n                        <br /><br />\n                        <span> <em>Moves:</em> </span> <br /> <br />\n                        <div id=\"moves\">\n\n                        </div>\n                    </div>\n                </div>\n            );\n    }\n}\n\nexport default Panel;\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport Square from './square';\r\nimport Panel from './panel';\r\n\r\nconst getAvailableMovesURL = \"http://127.0.0.1:8000/getAvailableMoves/\";\r\nconst getAvailableBuildsURL = \"http://127.0.0.1:8000/getAvailableBuilds/\";\r\n\r\nvar gameEnded = false;\r\n\r\nclass Board extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            cells: Array(25).fill(0),\r\n            firstHE: -1,\r\n            secondHE: -1,\r\n            firstJU: -1,\r\n            secondJU: -1,\r\n            availableMovesOrBuilds: [],\r\n            juNext: true,\r\n        };\r\n\r\n        this.humanPlayer = props.human;\r\n        this.chooseMove = false;\r\n        this.moving = false;\r\n        this.building = false;\r\n        this.buildersSetUp = 0;\r\n        this.lastClickedId = -1;\r\n\r\n        this.whoseMove = \"Jupiter's move\";\r\n\r\n        // values from 9 to 12 belong to Jupiter \r\n        this.upperBoundCellValueJU = 12;\r\n        this.lowerBoundCellValueJU = 9;\r\n\r\n        // values from 4 to 8 belong to Hercules\r\n        this.upperBoundCellValueHE = 8;\r\n        this.lowerBoundCellValueHE = 4;\r\n    }\r\n\r\n    clickHandle(idOfCell) {\r\n        if (gameEnded)\r\n            return;\r\n\r\n        // if the board is empty, nothing on it yet\r\n        if (this.buildersSetUp < 2) {\r\n            this.setUpBuilders(idOfCell);\r\n            return;\r\n        } else if (this.buildersSetUp < 4) {\r\n            this.setUpBuilders(idOfCell);\r\n            return;\r\n        }\r\n\r\n        let lowerBoundCellValue;\r\n        let upperBoundCellValue;\r\n\r\n        if (this.state.juNext) {\r\n            // if it is Jupiter's turn\r\n            lowerBoundCellValue = this.lowerBoundCellValueJU;\r\n            upperBoundCellValue = this.upperBoundCellValueJU;\r\n        } else {\r\n            lowerBoundCellValue = this.lowerBoundCellValueHE;\r\n            upperBoundCellValue = this.upperBoundCellValueHE;\r\n        }\r\n\r\n        // If we clicked on our builder\r\n        if (lowerBoundCellValue <= this.state.cells[idOfCell] && this.state.cells[idOfCell] <= upperBoundCellValue) {\r\n            // If we weren't moving, that is a builder is being selected\r\n            if (this.moving === false && this.building === false && idOfCell !== this.lastClickedId && this.lastClickedId === -1) {\r\n                this.lastClickedId = idOfCell;\r\n                this.chooseMove = true;\r\n            }\r\n            // If we're undo-ing the selection of builder\r\n            else if (idOfCell === this.lastClickedId && this.building === false) {\r\n                this.chooseMove = false;\r\n                this.moving = false;\r\n                this.lastClickedId = -1;\r\n                this.setState({ availableMovesOrBuilds: null });\r\n            }\r\n        }\r\n\r\n        // If we selected a builder then we're in a phase of choosing where to move, builder can still be de-selected\r\n        if (this.chooseMove === true) {\r\n            if (this.lastClickedId === idOfCell)\r\n                this.setupAvailableMoves(idOfCell, getAvailableMovesURL);\r\n            else {\r\n                this.chooseMove = false;\r\n                this.moving = true;\r\n            }\r\n        }\r\n\r\n        // If we decided to move to a certain field and that field is in the list of allowed moves\r\n        if (this.moving === true && this.state.availableMovesOrBuilds.find(x => x === idOfCell) != null) {\r\n            this.moveFigure(this.lastClickedId, idOfCell, () => this.setupAvailableMoves(idOfCell, getAvailableBuildsURL));\r\n            this.lastClickedId = -1;\r\n            this.moving = false;\r\n            this.building = true;\r\n            return;\r\n        }\r\n\r\n        // If we decided to move to a certain field and that field is in the list of allowed moves\r\n        if (this.building === true && this.state.availableMovesOrBuilds.find(x => x === idOfCell) != null) {\r\n            this.buildBlock(idOfCell);\r\n            this.building = false;\r\n            this.setState({ availableMovesOrBuilds: null }, () => this.changeMoveUI());\r\n        }\r\n    }\r\n\r\n    setUpBuilders(idOfCell) {\r\n        const cells = this.state.cells;\r\n\r\n        if (cells[idOfCell] !== 0) {\r\n            alert(\"Field is taken, please try again..\");\r\n            return;\r\n        }\r\n\r\n        if (this.buildersSetUp < 2) {\r\n            cells[idOfCell] = 9;\r\n\r\n            this.setState({\r\n                cells: cells,\r\n                firstJU: this.buildersSetUp === 0 ? idOfCell : this.state.firstJU,\r\n                secondJU: this.buildersSetUp === 1 ? idOfCell : this.state.secondJU,\r\n                juNext: this.buildersSetUp === 1 ? !this.state.juNext : this.state.juNext\r\n            }, () => this.changeMoveUI());\r\n        } else if (this.buildersSetUp < 4) {\r\n            cells[idOfCell] = 5;\r\n\r\n            this.setState({\r\n                cells: cells,\r\n                firstHE: this.buildersSetUp === 2 ? idOfCell : this.state.firstHE,\r\n                secondHE: this.buildersSetUp === 3 ? idOfCell : this.state.secondHE,\r\n                juNext: this.buildersSetUp === 3 ? !this.state.juNext : this.state.juNext\r\n            }, () => this.changeMoveUI());\r\n        }\r\n\r\n        this.buildersSetUp++;\r\n        this.logSetupUI(idOfCell, this.buildersSetUp);\r\n    }\r\n\r\n    setupAvailableMoves(selectedCoordinate, url) {\r\n        this.getMovesFromServer(selectedCoordinate, url)\r\n            .then((arrayOfMoves) => this.setState({ availableMovesOrBuilds: arrayOfMoves }));\r\n    }\r\n\r\n    async getMovesFromServer(selectedCoordinate, url) {\r\n        const cells = this.state.cells.slice().map((x) => {\r\n            if (x >= 9)\r\n                return (x + 1) % 5;\r\n            else if (x >= 5)\r\n                return x % 5;\r\n            else\r\n                return x;\r\n        });\r\n\r\n        const data = [{\r\n            cells: cells,\r\n            firstHE: this.state.firstHE,\r\n            secondHE: this.state.secondHE,\r\n            firstJU: this.state.firstJU,\r\n            secondJU: this.state.secondJU,\r\n            startPosition: [Math.floor(selectedCoordinate / 5), selectedCoordinate % 5],\r\n            depth: null\r\n        }];\r\n\r\n        const response = await axios\r\n            .post(url, data)\r\n            .catch((err) => { console.log(err) });\r\n        return response.data.moves.map(x => x[0] * 5 + x[1]);\r\n    }\r\n\r\n    // Moving a figure\r\n    moveFigure(fromCell, toCell, callBackFunction) {\r\n        const multiplier = Math.floor((this.state.cells[fromCell] + 1) / 5);\r\n        const cells = this.state.cells.slice();\r\n        const oldValueOfCell = cells[fromCell];\r\n        cells[fromCell] = oldValueOfCell >= 9 ? (cells[fromCell] + 1) % 5 : cells[fromCell] % 5;\r\n        cells[toCell] = oldValueOfCell >= 9 ? 5 * multiplier + cells[toCell] - 1 : 5 * multiplier + cells[toCell];\r\n\r\n        this.logMoveUI(fromCell, false);\r\n        this.logMoveUI(toCell, false);\r\n\r\n        this.setState({\r\n            firstHE: this.state.firstHE === fromCell ? toCell : this.state.firstHE,\r\n            secondHE: this.state.secondHE === fromCell ? toCell : this.state.secondHE,\r\n            firstJU: this.state.firstJU === fromCell ? toCell : this.state.firstJU,\r\n            secondJU: this.state.secondJU === fromCell ? toCell : this.state.secondJU,\r\n            cells: cells,\r\n        }, callBackFunction);\r\n    }\r\n\r\n    // Bulding a block\r\n    buildBlock(onCell) {\r\n        const cells = this.state.cells.slice();\r\n        cells[onCell] += 1;\r\n\r\n        this.logMoveUI(onCell, true);\r\n\r\n        this.setState({\r\n            cells: cells,\r\n            juNext: !this.state.juNext\r\n        }, () => this.checkWin());\r\n    }\r\n\r\n    checkWin() {\r\n        const index = this.state.cells.findIndex(x => x === 12 || x === 8);\r\n        if (index !== -1) {\r\n            switch (this.state.cells[index]) {\r\n                case 8:\r\n                    alert(\"Hercules won!\");\r\n                    break;\r\n                case 12:\r\n                    alert(\"Jupiter won!\");\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            gameEnded = true;\r\n\r\n            if (window.confirm(\"Do you want to play another game?\")) {\r\n                window.location.reload();\r\n            }\r\n            return;\r\n        }\r\n\r\n        let firstJU = this.state.firstJU;\r\n        let secondJU = this.state.secondJU;\r\n        let firstHE = this.state.firstHE;\r\n        let secondHE = this.state.secondHE;\r\n\r\n        if (this.getMovesFromServer(firstJU, getAvailableMovesURL).length === 0 && this.getMovesFromServer(secondJU, getAvailableMovesURL).length === 0) {\r\n            gameEnded = true;\r\n            alert(\"Hercules won!\");\r\n        } else if (this.getMovesFromServer(firstHE, getAvailableMovesURL).length === 0 && this.getMovesFromServer(secondHE, getAvailableMovesURL).length === 0) {\r\n            gameEnded = true;\r\n            alert(\"Jupiter won!\");\r\n        }\r\n\r\n        if (gameEnded) {\r\n            if (window.confirm(\"Do you want to play another game?\")) {\r\n                window.location.reload();\r\n            }\r\n        }\r\n    }\r\n    \r\n    downloadState() {\r\n        let text = document.getElementById(\"moves\").innerHTML;\r\n        text = text.replace(/\\s?<br>\\s?/g, \"\\n\");\r\n        text += \"\\n\";\r\n\r\n        var element = document.createElement('a');\r\n        element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\r\n        element.setAttribute('download', \"game_state.txt\");\r\n\r\n        element.style.display = 'none';\r\n        document.body.appendChild(element);\r\n\r\n        element.click();\r\n\r\n        document.body.removeChild(element);\r\n    }\r\n\r\n    loadState(event) {\r\n        if (this.state.firstJU === -1) {\r\n            const reader = new FileReader();\r\n            reader.onload = (e) => this.loadMoves(e);\r\n            reader.readAsText(event.target.files[0]);\r\n        } else {\r\n            if (window.confirm(\"You must refresh page before importing a game state.\\nRefresh now?\"))\r\n                window.location.reload();\r\n        }\r\n    }\r\n\r\n    loadMoves(event) {\r\n        const text = event.target.result.trim().split(\"\\n\");\r\n        this.setUpBuildersFromImport(text);\r\n        this.doMovesFromImport(text);\r\n    }\r\n\r\n    setUpBuildersFromImport(text) {\r\n        for (let i = 0; i < 2; i++) {\r\n            let firstRow = text.shift().split(\" \");\r\n            let numberOfCellFirst = this.convertCoordinatesImport(firstRow[0]);\r\n            let numberOfCellSecond = this.convertCoordinatesImport(firstRow[1]);\r\n\r\n            this.setUpBuilders(numberOfCellFirst);\r\n            this.setUpBuilders(numberOfCellSecond);\r\n        }\r\n    }\r\n\r\n    doMovesFromImport(text) {\r\n        while (text.length !== 0) {\r\n            let triplet = text.shift();\r\n            let singleMovesArray = triplet.split(\" \");\r\n            let moveFrom = this.convertCoordinatesImport(singleMovesArray[0]);\r\n            let moveTo = this.convertCoordinatesImport(singleMovesArray[1]);\r\n            let buildOn = this.convertCoordinatesImport(singleMovesArray[2]);\r\n\r\n            this.moveFigure(moveFrom, moveTo);\r\n            this.buildBlock(buildOn);\r\n        };\r\n    }\r\n\r\n    convertCoordinatesImport(coordinateString) {\r\n        let row = coordinateString[0];\r\n        let column = parseInt(coordinateString[1]) - 1;\r\n\r\n        switch (row) {\r\n            case \"A\":\r\n                row = 0;\r\n                break;\r\n            case \"B\":\r\n                row = 1;\r\n                break;\r\n            case \"C\":\r\n                row = 2;\r\n                break;\r\n            case \"D\":\r\n                row = 3;\r\n                break;\r\n            case \"E\":\r\n                row = 4;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return row * 5 + column;\r\n    }\r\n\r\n\r\n    convertCoordinatesOut(coordinate) {\r\n        let row = Math.floor(coordinate / 5);\r\n        let column = coordinate % 5;\r\n\r\n        let resultString = \"\";\r\n\r\n        switch (row) {\r\n            case 0:\r\n                resultString += \"A\";\r\n                break;\r\n            case 1:\r\n                resultString += \"B\";\r\n                break;\r\n            case 2:\r\n                resultString += \"C\";\r\n                break;\r\n            case 3:\r\n                resultString += \"D\";\r\n                break;\r\n            case 4:\r\n                resultString += \"E\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        resultString += String(column + 1) + \" \";\r\n        return resultString;\r\n    }\r\n\r\n    logMoveUI(move, isBuild) {\r\n        const movesDiv = document.getElementById(\"moves\");\r\n        let resString = this.convertCoordinatesOut(move);\r\n\r\n        if (isBuild)\r\n            resString += \"<br>\";\r\n\r\n        movesDiv.innerHTML += resString;\r\n    }\r\n\r\n    logSetupUI(whereSetUp, builderNumber) {\r\n        const movesDiv = document.getElementById(\"moves\");\r\n        let resString = this.convertCoordinatesOut(whereSetUp);\r\n\r\n        switch (builderNumber) {\r\n            case 2:\r\n            case 4:\r\n                resString += \"<br>\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        movesDiv.innerHTML += resString;\r\n    }\r\n\r\n    changeMoveUI() {\r\n        switch (this.state.juNext) {\r\n            case false:\r\n                this.whoseMove = \"Hercules's move\";\r\n                break;\r\n            case true:\r\n                this.whoseMove = \"Jupiter's move\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        document.getElementsByClassName(\"who-move\")[0].textContent = this.whoseMove;\r\n    }\r\n\r\n    render() {\r\n        const sources = this.state.cells.map((square) => this.getImageSourceCell(square));\r\n        return (\r\n            <div className=\"main-div\">\r\n                <Panel side=\"left\" class=\"left-panel\" />\r\n\r\n                <div className=\"board\">\r\n                    <div className=\"first-row\">\r\n                        <div className=\"column-number-cell\">\r\n                            1\r\n                        </div>\r\n                        <div className=\"column-number-cell\">\r\n                            2\r\n                        </div>\r\n                        <div className=\"column-number-cell\">\r\n                            3\r\n                        </div>\r\n                        <div className=\"column-number-cell\">\r\n                            4\r\n                        </div>\r\n                        <div className=\"column-number-cell\">\r\n                            5\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"board-row\">\r\n                        <span className=\"row-number-cell\">A</span>\r\n                        {this.renderSquare(sources[0], 0)}\r\n                        {this.renderSquare(sources[1], 1)}\r\n                        {this.renderSquare(sources[2], 2)}\r\n                        {this.renderSquare(sources[3], 3)}\r\n                        {this.renderSquare(sources[4], 4)}\r\n                    </div>\r\n                    <div className=\"board-row\">\r\n                        <span className=\"row-number-cell\">B</span>\r\n                        {this.renderSquare(sources[5], 5)}\r\n                        {this.renderSquare(sources[6], 6)}\r\n                        {this.renderSquare(sources[7], 7)}\r\n                        {this.renderSquare(sources[8], 8)}\r\n                        {this.renderSquare(sources[9], 9)}\r\n                    </div>\r\n                    <div className=\"board-row\">\r\n                        <span className=\"row-number-cell\">C</span>\r\n                        {this.renderSquare(sources[10], 10)}\r\n                        {this.renderSquare(sources[11], 11)}\r\n                        {this.renderSquare(sources[12], 12)}\r\n                        {this.renderSquare(sources[13], 13)}\r\n                        {this.renderSquare(sources[14], 14)}\r\n                    </div>\r\n                    <div className=\"board-row\">\r\n                        <span className=\"row-number-cell\">D</span>\r\n                        {this.renderSquare(sources[15], 15)}\r\n                        {this.renderSquare(sources[16], 16)}\r\n                        {this.renderSquare(sources[17], 17)}\r\n                        {this.renderSquare(sources[18], 18)}\r\n                        {this.renderSquare(sources[19], 19)}\r\n                    </div>\r\n                    <div className=\"board-row\">\r\n                        <span className=\"row-number-cell\">E</span>\r\n                        {this.renderSquare(sources[20], 20)}\r\n                        {this.renderSquare(sources[21], 21)}\r\n                        {this.renderSquare(sources[22], 22)}\r\n                        {this.renderSquare(sources[23], 23)}\r\n                        {this.renderSquare(sources[24], 24)}\r\n                    </div>\r\n                    <span className=\"who-move\">{this.whoseMove}</span>\r\n                </div>\r\n                <Panel\r\n                    side=\"right\"\r\n                    class=\"right-panel\"\r\n                    importState={(e) => this.loadState(e)}\r\n                    exportState={() => this.downloadState()}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Choosing a path for the image source for the appropriate value\r\n    getImageSourceCell(i) {\r\n        switch (i) {\r\n            case 0:\r\n                return \"lvl_0.jpg\";\r\n            case 1:\r\n                return \"lvl_1.png\";\r\n            case 2:\r\n                return \"lvl_2.png\";\r\n            case 3:\r\n                return \"lvl_3.png\";\r\n            case 4:\r\n                return \"lvl_4.png\";\r\n            case 5:\r\n                return \"hercules.png\";\r\n            case 6:\r\n                return \"lvl_1_HE.png\";\r\n            case 7:\r\n                return \"lvl_2_HE.png\";\r\n            case 8:\r\n                return \"lvl_3_HE.png\";\r\n            case 9:\r\n                return \"jupiter.png\";\r\n            case 10:\r\n                return \"lvl_1_JU.png\";\r\n            case 11:\r\n                return \"lvl_2_JU.png\";\r\n            case 12:\r\n                return \"lvl_3_JU.png\";\r\n            default:\r\n                return \"\";\r\n        }\r\n    }\r\n\r\n    renderSquare(source, idOfCell) {\r\n        const glowing = this.state.availableMovesOrBuilds?.find(x => x === idOfCell) != null ? true : false;\r\n        return (\r\n            <Square\r\n                src={`/static/images/${source}`}\r\n                onClick={() => this.clickHandle(idOfCell)}\r\n                glowing={glowing}\r\n            />\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Board;\r\n","import React from 'react';\r\nimport Board from './boardHuHu';\r\n\r\nclass Game extends React.Component {\r\n    render() {\r\n        return (\r\n            <Board human=\"JU\" />\r\n        )\r\n    }\r\n}\r\n\r\nexport default Game;","import Game from './components/game';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './game.css';\r\n\r\nReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}